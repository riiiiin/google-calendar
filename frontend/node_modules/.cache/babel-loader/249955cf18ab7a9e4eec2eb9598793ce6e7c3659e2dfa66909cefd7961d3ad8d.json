{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport applyCaseMiddleware from \"axios-case-converter\";\nimport axios from \"axios\";\nconst options = {\n  ignoreHeaders: true\n};\nconst client1 = applyCaseMiddleware(axios.create({\n  baseURL: \"http://localhost:3001/\"\n}), options);\n\n// イベント作成\nexport const sendEvent = params => {\n  return client1.post(\"events/create\", params);\n};\nexport const getEvent = () => {\n  return client1.post(\"events/index\", {\n    user_id: Cookies.get(\"_uid\")\n  });\n  console.log(Cookies.get(\"_uid\"));\n};","map":{"version":3,"names":["Cookies","applyCaseMiddleware","axios","options","ignoreHeaders","client1","create","baseURL","sendEvent","params","post","getEvent","user_id","get","console","log"],"sources":["/Users/matsudarisa/dev/calendar2/frontend/src/lib/api/event.ts"],"sourcesContent":["import client from \"lib/api/client\"\nimport Cookies from \"js-cookie\"\nimport applyCaseMiddleware from \"axios-case-converter\"\nimport axios from \"axios\"\n\nimport { Event } from \"interfaces/index\"\n\nconst options = {\n    ignoreHeaders: true \n  }\n  \nconst client1 = applyCaseMiddleware(axios.create({\nbaseURL: \"http://localhost:3001/\"\n}), options)\n\n// イベント作成\nexport const sendEvent = (params: Event) => {\n  return client1.post(\"events/create\", params)\n}\n\nexport const getEvent = () => {\n  return client1.post(\"events/index\", {\n    user_id: Cookies.get(\"_uid\")\n  })\n  console.log(Cookies.get(\"_uid\"))\n}\n"],"mappings":"AACA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,mBAAmB,MAAM,sBAAsB;AACtD,OAAOC,KAAK,MAAM,OAAO;AAIzB,MAAMC,OAAO,GAAG;EACZC,aAAa,EAAE;AACjB,CAAC;AAEH,MAAMC,OAAO,GAAGJ,mBAAmB,CAACC,KAAK,CAACI,MAAM,CAAC;EACjDC,OAAO,EAAE;AACT,CAAC,CAAC,EAAEJ,OAAO,CAAC;;AAEZ;AACA,OAAO,MAAMK,SAAS,GAAIC,MAAa,IAAK;EAC1C,OAAOJ,OAAO,CAACK,IAAI,CAAC,eAAe,EAAED,MAAM,CAAC;AAC9C,CAAC;AAED,OAAO,MAAME,QAAQ,GAAGA,CAAA,KAAM;EAC5B,OAAON,OAAO,CAACK,IAAI,CAAC,cAAc,EAAE;IAClCE,OAAO,EAAEZ,OAAO,CAACa,GAAG,CAAC,MAAM;EAC7B,CAAC,CAAC;EACFC,OAAO,CAACC,GAAG,CAACf,OAAO,CAACa,GAAG,CAAC,MAAM,CAAC,CAAC;AAClC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}