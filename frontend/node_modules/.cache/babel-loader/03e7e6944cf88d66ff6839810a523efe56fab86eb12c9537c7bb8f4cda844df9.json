{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { Component, createRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Calendar } from '@fullcalendar/core';\nimport { CustomRenderingStore } from '@fullcalendar/core/internal';\nexport default class FullCalendar extends Component {\n  constructor() {\n    super(...arguments);\n    this.elRef = createRef();\n    this.needsCustomRenderingResize = false;\n    this.isInitialRender = true;\n    this.state = {\n      customRenderingMap: new Map()\n    };\n  }\n  render() {\n    const portalNodes = [];\n    for (const customRendering of this.state.customRenderingMap.values()) {\n      const {\n        generatorMeta\n      } = customRendering;\n      const vnode = typeof generatorMeta === 'function' ? generatorMeta(customRendering.renderProps) : generatorMeta;\n      portalNodes.push(createPortal(vnode, customRendering.containerEl, customRendering.id));\n    }\n    return React.createElement(\"div\", {\n      ref: this.elRef\n    }, portalNodes);\n  }\n  componentDidMount() {\n    const customRenderingStore = new CustomRenderingStore();\n    this.handleCustomRendering = customRenderingStore.handle.bind(customRenderingStore);\n    this.calendar = new Calendar(this.elRef.current, Object.assign(Object.assign({}, this.props), {\n      handleCustomRendering: this.handleCustomRendering\n    }));\n    this.calendar.render();\n    customRenderingStore.subscribe(customRenderingMap => {\n      if (this.isInitialRender) {\n        this.doCustomRendering(customRenderingMap);\n      } else {\n        this.requestCustomRendering(customRenderingMap);\n      }\n    });\n  }\n  requestCustomRendering(customRenderingMap) {\n    this.cancelCustomRendering();\n    this.customRenderingRequestId = requestAnimationFrame(() => {\n      FullCalendar.act(() => {\n        this.doCustomRendering(customRenderingMap);\n      });\n    });\n  }\n  doCustomRendering(customRenderingMap) {\n    this.needsCustomRenderingResize = true;\n    this.setState({\n      customRenderingMap\n    });\n  }\n  cancelCustomRendering() {\n    if (this.customRenderingRequestId) {\n      cancelAnimationFrame(this.customRenderingRequestId);\n      this.customRenderingRequestId = undefined;\n    }\n  }\n  componentDidUpdate() {\n    this.isInitialRender = false;\n    this.calendar.resetOptions(Object.assign(Object.assign({}, this.props), {\n      handleCustomRendering: this.handleCustomRendering\n    }));\n    if (this.needsCustomRenderingResize) {\n      this.needsCustomRenderingResize = false;\n      this.calendar.updateSize();\n    }\n  }\n  componentWillUnmount() {\n    this.calendar.destroy();\n    this.cancelCustomRendering();\n  }\n  getApi() {\n    return this.calendar;\n  }\n}\nFullCalendar.act = f => {\n  f();\n};","map":{"version":3,"names":["React","Component","createRef","createPortal","Calendar","CustomRenderingStore","FullCalendar","constructor","elRef","needsCustomRenderingResize","isInitialRender","state","customRenderingMap","Map","render","portalNodes","customRendering","values","generatorMeta","vnode","renderProps","push","containerEl","id","createElement","ref","componentDidMount","customRenderingStore","handleCustomRendering","handle","bind","calendar","current","Object","assign","props","subscribe","doCustomRendering","requestCustomRendering","cancelCustomRendering","customRenderingRequestId","requestAnimationFrame","act","setState","cancelAnimationFrame","undefined","componentDidUpdate","resetOptions","updateSize","componentWillUnmount","destroy","getApi","f"],"sources":["/Users/matsudarisa/dev/calendar2/frontend/node_modules/@fullcalendar/react/src/index.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { Component, createRef, ReactPortal } from 'react'\nimport { createPortal } from 'react-dom'\nimport {\n  CalendarOptions,\n  CalendarApi,\n  Calendar,\n} from '@fullcalendar/core'\nimport {\n  CustomRendering,\n  CustomRenderingStore,\n} from '@fullcalendar/core/internal'\n\ninterface CalendarState {\n  customRenderingMap: Map<string, CustomRendering<any>>\n}\n\nexport default class FullCalendar extends Component<CalendarOptions, CalendarState> {\n  static act = (f: () => void) => { f() }\n\n  private elRef = createRef<HTMLDivElement>()\n  private calendar: Calendar\n  private customRenderingRequestId: any\n  private handleCustomRendering: (customRendering: CustomRendering<any>) => void\n  private needsCustomRenderingResize = false\n  private isInitialRender = true\n\n  state: CalendarState = {\n    customRenderingMap: new Map<string, CustomRendering<any>>()\n  }\n\n  render() {\n    const portalNodes: ReactPortal[] = []\n\n    for (const customRendering of this.state.customRenderingMap.values()) {\n      const { generatorMeta } = customRendering\n      const vnode = typeof generatorMeta === 'function' ?\n        generatorMeta(customRendering.renderProps) :\n        generatorMeta\n\n      portalNodes.push(\n        createPortal(\n          vnode,\n          customRendering.containerEl,\n          customRendering.id, // key\n        )\n      )\n    }\n\n    return (\n      <div ref={this.elRef}>\n        {portalNodes}\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    const customRenderingStore = new CustomRenderingStore<unknown>()\n    this.handleCustomRendering = customRenderingStore.handle.bind(customRenderingStore)\n\n    this.calendar = new Calendar(this.elRef.current, {\n      ...this.props,\n      handleCustomRendering: this.handleCustomRendering,\n    })\n\n    this.calendar.render()\n\n    customRenderingStore.subscribe((customRenderingMap) => {\n      if (this.isInitialRender) {\n        this.doCustomRendering(customRenderingMap)\n      } else {\n        this.requestCustomRendering(customRenderingMap)\n      }\n    })\n  }\n\n  requestCustomRendering(customRenderingMap) {\n    this.cancelCustomRendering()\n    this.customRenderingRequestId = requestAnimationFrame(() => {\n      FullCalendar.act(() => {\n        this.doCustomRendering(customRenderingMap)\n      })\n    })\n  }\n\n  doCustomRendering(customRenderingMap) {\n    this.needsCustomRenderingResize = true\n    this.setState({ customRenderingMap })\n  }\n\n  cancelCustomRendering() {\n    if (this.customRenderingRequestId) {\n      cancelAnimationFrame(this.customRenderingRequestId)\n      this.customRenderingRequestId = undefined\n    }\n  }\n\n  componentDidUpdate() {\n    this.isInitialRender = false\n    this.calendar.resetOptions({\n      ...this.props,\n      handleCustomRendering: this.handleCustomRendering,\n    })\n\n    if (this.needsCustomRenderingResize) {\n      this.needsCustomRenderingResize = false\n      this.calendar.updateSize()\n    }\n  }\n\n  componentWillUnmount() {\n    this.calendar.destroy()\n    this.cancelCustomRendering()\n  }\n\n  getApi(): CalendarApi {\n    return this.calendar\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}