{"ast":null,"code":"var _jsxFileName = \"/Users/matsudarisa/dev/calendar2/frontend/src/components/pages/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { AuthContext } from \"App\";\nimport \"../../styles/Calendar.css\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport { useCallback } from \"react\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\n// とりあえず認証済みユーザーの名前やメールアドレスを表示\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    isSignedIn,\n    currentUser\n  } = useContext(AuthContext);\n  const handleDateClick = useCallback(arg => {\n    alert(arg.dateStr);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isSignedIn && currentUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Signed in successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Email: \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Name: \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n        initialView: \"dayGridMonth\",\n        locale: \"ja\" // 日本語化\n        ,\n        events: [{\n          title: \"event 1\",\n          start: \"2023-06-01\"\n        },\n        // endに指定した日付は含まないので注意\n        {\n          title: \"event 2\",\n          start: \"2021-06-03\",\n          end: \"2021-06-05\"\n        }, {\n          title: \"event 3\",\n          start: \"2021-06-07T10:00:00\" // 時間を指定するときはISO 8601の形式で。\n        }],\n\n        plugins: [dayGridPlugin, interactionPlugin],\n        dateClick: handleDateClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Not signed in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"LgN0UN5tFIn4M43sDd0XRLSllBw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useContext","AuthContext","FullCalendar","dayGridPlugin","useCallback","interactionPlugin","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","isSignedIn","currentUser","handleDateClick","arg","alert","dateStr","children","fileName","_jsxFileName","lineNumber","columnNumber","email","name","initialView","locale","events","title","start","end","plugins","dateClick","_c","$RefreshReg$"],"sources":["/Users/matsudarisa/dev/calendar2/frontend/src/components/pages/Home.tsx"],"sourcesContent":["import React, { useContext } from \"react\"\nimport { AuthContext } from \"App\"\n\nimport \"../../styles/Calendar.css\";\n\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport { useCallback } from \"react\";\nimport interactionPlugin, { DateClickArg } from \"@fullcalendar/interaction\";\n\n\n// とりあえず認証済みユーザーの名前やメールアドレスを表示\nconst Home: React.FC = () => {\n  const { isSignedIn, currentUser } = useContext(AuthContext)\n  const handleDateClick = useCallback((arg: DateClickArg) => {\n    alert(arg.dateStr);\n  }, []);\n  \n  return (\n    <>\n      {\n        isSignedIn && currentUser ? (\n          <>\n            <h1>Signed in successfully!</h1>\n            <h2>Email: {currentUser?.email}</h2>\n            <h2>Name: {currentUser?.name}</h2>\n            <FullCalendar\n              initialView=\"dayGridMonth\"\n              locale=\"ja\" // 日本語化\n              events={[\n                { title: \"event 1\", start: \"2023-06-01\" },\n                // endに指定した日付は含まないので注意\n                { title: \"event 2\", start: \"2021-06-03\", end: \"2021-06-05\" },\n                {\n                  title: \"event 3\",\n                  start: \"2021-06-07T10:00:00\", // 時間を指定するときはISO 8601の形式で。\n                },\n              ]}\n              plugins={[dayGridPlugin, interactionPlugin]}\n\n              dateClick={handleDateClick} \n            />\n          </>\n        ) : (\n          <h1>Not signed in</h1>\n        )\n      }\n    </>\n  )\n}\n\nexport default Home"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,KAAK;AAEjC,OAAO,2BAA2B;AAElC,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,SAASC,WAAW,QAAQ,OAAO;AACnC,OAAOC,iBAAiB,MAAwB,2BAA2B;;AAG3E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,UAAU;IAAEC;EAAY,CAAC,GAAGb,UAAU,CAACC,WAAW,CAAC;EAC3D,MAAMa,eAAe,GAAGV,WAAW,CAAEW,GAAiB,IAAK;IACzDC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAAAE,SAAA;IAAAS,QAAA,EAEIN,UAAU,IAAIC,WAAW,gBACvBN,OAAA,CAAAE,SAAA;MAAAS,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAChCf,OAAA;QAAAW,QAAA,GAAI,SAAO,EAACL,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEU,KAAK;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACpCf,OAAA;QAAAW,QAAA,GAAI,QAAM,EAACL,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEW,IAAI;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAClCf,OAAA,CAACL,YAAY;QACXuB,WAAW,EAAC,cAAc;QAC1BC,MAAM,EAAC,IAAI,CAAC;QAAA;QACZC,MAAM,EAAE,CACN;UAAEC,KAAK,EAAE,SAAS;UAAEC,KAAK,EAAE;QAAa,CAAC;QACzC;QACA;UAAED,KAAK,EAAE,SAAS;UAAEC,KAAK,EAAE,YAAY;UAAEC,GAAG,EAAE;QAAa,CAAC,EAC5D;UACEF,KAAK,EAAE,SAAS;UAChBC,KAAK,EAAE,qBAAqB,CAAE;QAChC,CAAC,CACD;;QACFE,OAAO,EAAE,CAAC5B,aAAa,EAAEE,iBAAiB,CAAE;QAE5C2B,SAAS,EAAElB;MAAgB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3B;IAAA,gBACD,gBAEHf,OAAA;MAAAW,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAClB,iBAEF;AAEP,CAAC;AAAAX,EAAA,CArCKD,IAAc;AAAAuB,EAAA,GAAdvB,IAAc;AAuCpB,eAAeA,IAAI;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}