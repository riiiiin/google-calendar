{"ast":null,"code":"var _jsxFileName = \"/Users/matsudarisa/dev/calendar2/frontend/src/components/pages/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { AuthContext } from \"App\";\nimport \"../../styles/Calendar.css\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport { useCallback, useState } from \"react\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\n// とりあえず認証済みユーザーの名前やメールアドレスを表示\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    isSignedIn,\n    currentUser\n  } = useContext(AuthContext);\n  const [isModal, setIsModal] = useState(true);\n  const handleDateClick = useCallback(arg => {\n    alert(arg.dateStr);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isSignedIn && currentUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            display: isModal ? \"block\" : \"none\",\n            height: \"100vh\",\n            width: \"100vw\",\n            zIndex: \"10\",\n            backgroundColor: \"rgba(0, 0, 0, .5)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Signed in successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Email: \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Name: \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n          initialView: \"dayGridMonth\",\n          locale: \"ja\" // 日本語化\n          ,\n          events: [{\n            title: \"event 1\",\n            start: \"2023-06-01\"\n          },\n          // endに指定した日付は含まないので注意\n          {\n            title: \"event 2\",\n            start: \"2021-06-03\",\n            end: \"2021-06-05\"\n          }, {\n            title: \"event 3\",\n            start: \"2021-06-07T10:00:00\" // 時間を指定するときはISO 8601の形式で。\n          }],\n\n          plugins: [dayGridPlugin, interactionPlugin],\n          dateClick: handleDateClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Not signed in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"p8Mod0Qz9F3HFKp3Ky8v4+OLgqw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useContext","AuthContext","FullCalendar","dayGridPlugin","useCallback","useState","interactionPlugin","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","isSignedIn","currentUser","isModal","setIsModal","handleDateClick","arg","alert","dateStr","children","style","position","top","left","display","height","width","zIndex","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","email","name","initialView","locale","events","title","start","end","plugins","dateClick","_c","$RefreshReg$"],"sources":["/Users/matsudarisa/dev/calendar2/frontend/src/components/pages/Home.tsx"],"sourcesContent":["import React, { useContext } from \"react\"\nimport { AuthContext } from \"App\"\n\nimport \"../../styles/Calendar.css\";\n\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport { useCallback, useState } from \"react\";\nimport interactionPlugin, { DateClickArg } from \"@fullcalendar/interaction\";\n\n\n// とりあえず認証済みユーザーの名前やメールアドレスを表示\nconst Home: React.FC = () => {\n  const { isSignedIn, currentUser } = useContext(AuthContext)\n  const [isModal, setIsModal] = useState<boolean>(true);\n\n\n  const handleDateClick = useCallback((arg: DateClickArg) => {\n    alert(arg.dateStr);\n  }, []);\n  \n  return (\n    <>\n      {\n        isSignedIn && currentUser ? (\n          <>\n            <div>\n              <div style={{position: \"absolute\", top: 0, left: 0, display: isModal ? \"block\" : \"none\", height: \"100vh\", width: \"100vw\", zIndex: \"10\", backgroundColor: \"rgba(0, 0, 0, .5)\"}}>\n                \n              </div>\n              <h1>Signed in successfully!</h1>\n              <h2>Email: {currentUser?.email}</h2>\n              <h2>Name: {currentUser?.name}</h2>\n              <FullCalendar\n                initialView=\"dayGridMonth\"\n                locale=\"ja\" // 日本語化\n                events={[\n                  { title: \"event 1\", start: \"2023-06-01\" },\n                  // endに指定した日付は含まないので注意\n                  { title: \"event 2\", start: \"2021-06-03\", end: \"2021-06-05\" },\n                  {\n                    title: \"event 3\",\n                    start: \"2021-06-07T10:00:00\", // 時間を指定するときはISO 8601の形式で。\n                  },\n                ]}\n                plugins={[dayGridPlugin, interactionPlugin]}\n\n                dateClick={handleDateClick} \n              />\n            </div>\n            \n          </>\n        ) : (\n          <h1>Not signed in</h1>\n        )\n      }\n    </>\n  )\n}\n\nexport default Home"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}