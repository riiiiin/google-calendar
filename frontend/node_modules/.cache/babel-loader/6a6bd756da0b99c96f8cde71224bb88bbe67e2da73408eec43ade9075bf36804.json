{"ast":null,"code":"var _jsxFileName = \"/Users/matsudarisa/dev/calendar2/frontend/src/components/pages/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { AuthContext } from \"App\";\nimport \"../../styles/Calendar.css\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport { useCallback, useState } from \"react\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\n// とりあえず認証済みユーザーの名前やメールアドレスを表示\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    isSignedIn,\n    currentUser\n  } = useContext(AuthContext);\n  const [isModal, setIsModal] = useState(false);\n  const [date, setDate] = useState();\n  const [event, setEvent] = useState();\n  const handleDateClick = useCallback(arg => {\n    setDate(arg.dateStr);\n    setIsModal(true);\n  }, []);\n  const handleClick = () => {\n    setEvent('bbb');\n    setIsModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isSignedIn && currentUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            display: isModal ? \"block\" : \"none\",\n            height: \"200px\",\n            width: \"400px\",\n            zIndex: \"10\",\n            backgroundColor: \"white\",\n            boxShadow: \"0px 0px 10px rgba(0, 0, 0, .5)\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setEvent(e.target.value);\n              },\n              type: \"text\",\n              placeholder: \"\\u30A4\\u30D9\\u30F3\\u30C8\\u3092\\u8FFD\\u52A0\",\n              style: {\n                border: \"none\",\n                borderBottom: \"1px solid black\",\n                fontSize: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClick,\n            children: \"\\u5B8C\\u4E86\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Signed in successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Email: \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Name: \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n          initialView: \"dayGridMonth\",\n          locale: \"ja\" // 日本語化\n          ,\n          events: [{\n            title: \"event 1\",\n            start: \"2023-06-01\"\n          },\n          // endに指定した日付は含まないので注意\n          {\n            title: \"event 2\",\n            start: \"2021-06-03\",\n            end: \"2021-06-05\"\n          }, {\n            title: \"event 3\",\n            start: \"2021-06-07T10:00:00\" // 時間を指定するときはISO 8601の形式で。\n          }],\n\n          plugins: [dayGridPlugin, interactionPlugin],\n          dateClick: handleDateClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Not signed in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"Z+ul9NYSlOcPXilZ6mzzNEp2U9A=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useContext","AuthContext","FullCalendar","dayGridPlugin","useCallback","useState","interactionPlugin","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","isSignedIn","currentUser","isModal","setIsModal","date","setDate","event","setEvent","handleDateClick","arg","dateStr","handleClick","children","style","position","top","left","display","height","width","zIndex","backgroundColor","boxShadow","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","type","placeholder","border","borderBottom","fontSize","onClick","email","name","initialView","locale","events","title","start","end","plugins","dateClick","_c","$RefreshReg$"],"sources":["/Users/matsudarisa/dev/calendar2/frontend/src/components/pages/Home.tsx"],"sourcesContent":["import React, { useContext } from \"react\"\nimport { AuthContext } from \"App\"\n\nimport \"../../styles/Calendar.css\";\n\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport { useCallback, useState } from \"react\";\nimport interactionPlugin, { DateClickArg } from \"@fullcalendar/interaction\";\n\n\n// とりあえず認証済みユーザーの名前やメールアドレスを表示\nconst Home: React.FC = () => {\n  const { isSignedIn, currentUser } = useContext(AuthContext)\n  const [isModal, setIsModal] = useState<boolean>(false);\n  const [date, setDate] = useState<string>();\n  const [event, setEvent] = useState<string>();\n\n\n  const handleDateClick = useCallback((arg: DateClickArg) => {\n    setDate(arg.dateStr);\n    setIsModal(true)\n  }, []);\n\n  const handleClick = () => {\n    setEvent('bbb');\n    setIsModal(false);\n  }\n  \n  return (\n    <>\n      {\n        isSignedIn && currentUser ? (\n          <>\n            <div style={{position: \"relative\"}}>\n              <div style={{position: \"absolute\", top: 0, left: 0, display: isModal ? \"block\" : \"none\", height: \"200px\", width: \"400px\", zIndex: \"10\", backgroundColor: \"white\", boxShadow: \"0px 0px 10px rgba(0, 0, 0, .5)\"}}>\n                <div className=\"\">\n                  {date}\n                </div>\n                <div>\n                  <input onChange={(e)=>{setEvent(e.target.value)}} type=\"text\" placeholder=\"イベントを追加\" style={{border: \"none\", borderBottom: \"1px solid black\", fontSize: \"20px\"}} />\n                </div>\n                <button onClick={handleClick}>完了</button>\n              </div>\n              <h1>Signed in successfully!</h1>\n              <h2>Email: {currentUser?.email}</h2>\n              <h2>Name: {currentUser?.name}</h2>\n              <FullCalendar\n                initialView=\"dayGridMonth\"\n                locale=\"ja\" // 日本語化\n                events={[\n                  { title: \"event 1\", start: \"2023-06-01\" },\n                  // endに指定した日付は含まないので注意\n                  { title: \"event 2\", start: \"2021-06-03\", end: \"2021-06-05\" },\n                  {\n                    title: \"event 3\",\n                    start: \"2021-06-07T10:00:00\", // 時間を指定するときはISO 8601の形式で。\n                  },\n                ]}\n                plugins={[dayGridPlugin, interactionPlugin]}\n\n                dateClick={handleDateClick} \n              />\n            </div>\n            \n          </>\n        ) : (\n          <h1>Not signed in</h1>\n        )\n      }\n    </>\n  )\n}\n\nexport default Home"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,KAAK;AAEjC,OAAO,2BAA2B;AAElC,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,OAAOC,iBAAiB,MAAwB,2BAA2B;;AAG3E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,UAAU;IAAEC;EAAY,CAAC,GAAGd,UAAU,CAACC,WAAW,CAAC;EAC3D,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAU,KAAK,CAAC;EACtD,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,EAAU;EAC1C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,EAAU;EAG5C,MAAMgB,eAAe,GAAGjB,WAAW,CAAEkB,GAAiB,IAAK;IACzDJ,OAAO,CAACI,GAAG,CAACC,OAAO,CAAC;IACpBP,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBJ,QAAQ,CAAC,KAAK,CAAC;IACfJ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAe,QAAA,EAEIZ,UAAU,IAAIC,WAAW,gBACvBN,OAAA,CAAAE,SAAA;MAAAe,QAAA,eACEjB,OAAA;QAAKkB,KAAK,EAAE;UAACC,QAAQ,EAAE;QAAU,CAAE;QAAAF,QAAA,gBACjCjB,OAAA;UAAKkB,KAAK,EAAE;YAACC,QAAQ,EAAE,UAAU;YAAEC,GAAG,EAAE,CAAC;YAAEC,IAAI,EAAE,CAAC;YAAEC,OAAO,EAAEf,OAAO,GAAG,OAAO,GAAG,MAAM;YAAEgB,MAAM,EAAE,OAAO;YAAEC,KAAK,EAAE,OAAO;YAAEC,MAAM,EAAE,IAAI;YAAEC,eAAe,EAAE,OAAO;YAAEC,SAAS,EAAE;UAAgC,CAAE;UAAAV,QAAA,gBAC7MjB,OAAA;YAAK4B,SAAS,EAAC,EAAE;YAAAX,QAAA,EACdR;UAAI;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACD,eACNhC,OAAA;YAAAiB,QAAA,eACEjB,OAAA;cAAOiC,QAAQ,EAAGC,CAAC,IAAG;gBAACtB,QAAQ,CAACsB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;cAAA,CAAE;cAACC,IAAI,EAAC,MAAM;cAACC,WAAW,EAAC,4CAAS;cAACpB,KAAK,EAAE;gBAACqB,MAAM,EAAE,MAAM;gBAAEC,YAAY,EAAE,iBAAiB;gBAAEC,QAAQ,EAAE;cAAM;YAAE;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAG;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC9J,eACNhC,OAAA;YAAQ0C,OAAO,EAAE1B,WAAY;YAAAC,QAAA,EAAC;UAAE;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACrC,eACNhC,OAAA;UAAAiB,QAAA,EAAI;QAAuB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAChChC,OAAA;UAAAiB,QAAA,GAAI,SAAO,EAACX,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEqC,KAAK;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACpChC,OAAA;UAAAiB,QAAA,GAAI,QAAM,EAACX,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEsC,IAAI;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAClChC,OAAA,CAACN,YAAY;UACXmD,WAAW,EAAC,cAAc;UAC1BC,MAAM,EAAC,IAAI,CAAC;UAAA;UACZC,MAAM,EAAE,CACN;YAAEC,KAAK,EAAE,SAAS;YAAEC,KAAK,EAAE;UAAa,CAAC;UACzC;UACA;YAAED,KAAK,EAAE,SAAS;YAAEC,KAAK,EAAE,YAAY;YAAEC,GAAG,EAAE;UAAa,CAAC,EAC5D;YACEF,KAAK,EAAE,SAAS;YAChBC,KAAK,EAAE,qBAAqB,CAAE;UAChC,CAAC,CACD;;UACFE,OAAO,EAAE,CAACxD,aAAa,EAAEG,iBAAiB,CAAE;UAE5CsD,SAAS,EAAEvC;QAAgB;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC3B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACE,iBAEL,gBAEHhC,OAAA;MAAAiB,QAAA,EAAI;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAClB,iBAEF;AAEP,CAAC;AAAA5B,EAAA,CA5DKD,IAAc;AAAAkD,EAAA,GAAdlD,IAAc;AA8DpB,eAAeA,IAAI;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}